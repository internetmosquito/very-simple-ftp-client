<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="ftpclient">
	
	<!-- Basic parameters required -->
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse java"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
	<property name="username" value="Alejandro Villamarin"/>
	<property name="company.name" value="Tecnalia Research And Innovation"/>
	<property name="jar.name" value="vsftpclient"/>
	<property name="lib.dir" value="lib"/>
	<property name="doc.dir" value="docs"/>
	<property name="dist.dir" value="dist"/>
	<property name="package.dir" value="org/ftp/simpleclient"/>
	
	<!-- Used for versioning system -->
	<property name="revision.number" value="0"/>
	<property name="minor.version.number" value="1"/>
	<property name="major.version.number" value="1"/>
	
	<!-- FTP4j library version -->
	<property name="ftp4j.version.number" value="1.6.1"/>
	<property name="ftp4j.name" value="ftp4j"/>
	
	<!-- Log4j library version -->
	<property name="log4j.version.number" value="1.2.9"/>
	<property name="log4j.name" value="log4j"/>
	
	
	<!-- Classpath definition, ftp4j and log4j required -->
    <path id="ftpclient.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/ftp4j-1.6.1.jar"/>
        <pathelement location="lib/log4j-1.2.9.jar"/>
    </path>
	
    <!-- This macro definition is used to get a timestamp at any given point by calling it-->
    <macrodef  name="set.timestamp">
    	<sequential>
    		<tstamp>
    	    	<format property="current.time" pattern="yyyyMMdd"/>
    	    </tstamp>
    	</sequential>
   	</macrodef>
	
	<!-- Creates the bin folder -->
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
	
	<!-- Deletes the bin folder -->
    <target name="clean">
        <delete failonerror="false" includeEmptyDirs="true" dir="bin"/>
    	<delete>
    		<fileset dir="${dist.dir}" includes="*"/>
    	</delete>
    	<delete failonerror="false" includeEmptyDirs="true" dir="${doc.dir}"/>
    	<delete failonerror="false" includeEmptyDirs="true" dir="downloads"/>
    	<delete failonerror="false" includeEmptyDirs="true" dir="uploads"/>
    </target>
	
	<!-- Calls the clean task -->
    <target depends="clean" name="cleanall"/>
	
	
    <target depends="build-subprojects,build-project" name="build"/>
	
    <target name="build-subprojects"/>
	
	<!-- This is the task that compiles the sources -->
    <target depends="init" name="build-project">
    	<echo message="Compilation of the ${ant.project.name} project commencing..."/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}" includeantruntime="false">
            <src path="src"/>
            <classpath refid="ftpclient.classpath"/>
        </javac>
    </target>
	
	<!-- Task to generate the JAR file for the ftpclient library -->
	<target depends="build-project" name="jar">
		<echo message="Generation of the vsftpclient JAR file commencing..."/>
		    	<!-- Get the timestamp -->	
		    	<set.timestamp/>
		    	<!-- Create our own manifest file for our JAR -->
		    	<manifest file="MANIFEST.MF">
		    		<attribute name="Built-By" value="${username} - ${company.name}"/>
		    		<attribute name="Implementation-Title" value="A very simple FTP client using the ftp4j library"/>
		    	    <attribute name="Main-Class" value="FTPclient"/>
		    	    <attribute name="Implementation-Version" 
		    	             value="${major.version.number}.${minor.version.number}.${revision.number}"/>   
		    	    <attribute name="Built-Date" value="${current.time}"/>                 
		    	</manifest>
		    	
		    	<!-- Create the JAR File, failing if nothing was included-->
		    	<jar whenmanifestonly="fail" destfile="${dist.dir}/${jar.name}_${major.version.number}.${minor.version.number}.${revision.number}.jar" manifest="MANIFEST.MF">
		    		<fileset dir="bin">
		    			<include name="${package.dir}/*.class"/>
		    		</fileset>
		    	
		    		<!-- Comment this if you don't want sources attached to the JAR -->
		    		<fileset dir="src">
		    			<include name="${package.dir}/*.java"/>
		    			<include name="log4j.properties"/>
		    		</fileset>
		    	</jar>
		    	<echo message="Generation of the Very Simple FTP client JAR file finished!"/>
    </target>
	
	<!-- Generates the JavaDoc -->
	<target name="doc" description="Generates the Javadoc associated">
		<javadoc destdir="${doc.dir}/api"
		         author="true"
		         version="true"
		         use="true"
		         windowtitle="Vsftpclient API">
			<!-- Have to specify classpath for thir-party libraries -->
		    <classpath>
		        <fileset dir="${lib.dir}">
		            <include name="${ftp4j.name}-${ftp4j.version.number}.jar"/>
		        	<include name="${log4j.name}-${log4j.version.number}.jar"/>
		        </fileset>
		    </classpath>
			<packageset dir="src" defaultexcludes="yes">
		    	<include name="org/ftp/simpleclient/**"/>
		      	<exclude name="org/ftp/simpleclient/doc-files/**"/>
		    </packageset>
			
			<link href="http://download.oracle.com/javase/6/docs/api/"/>
			<link href="http://logging.apache.org/log4j/1.2/apidocs/"/> 
			<link href="http://www.sauronsoftware.it/projects/ftp4j/api/"/>
		    
			<doctitle><![CDATA[<h1>Vsftpclient API</h1>]]></doctitle>
		    <bottom><![CDATA[<i> 2011 Alejandro Villamarin. Use, distribute, copy and share at your own discretion.</i>]]></bottom>
		  </javadoc>
	</target>
	
	<!-- Packs the JAR vsftpclient and the folder with required libraries in a zip file, along a readme -->
	<target depends="jar" name="release">
		<echo message="Generation of the zipped file with everything needed to use the library commencing..."/>
		    	<!-- Get the timestamp -->   	
		    	<set.timestamp/>
				
				<!-- call the javadoc generation task -->
		 		<antcall target="doc">
		 		</antcall>
		
		    	<!-- Make the zipped file -->
		  		<zip destfile="${dist.dir}/${jar.name}_${major.version.number}.${minor.version.number}.${revision.number}-${current.time}.zip">
		    		<!-- Place required libraries in the lib folder -->
		  			<zipfileset dir="lib" prefix="lib"/>
		  			<!-- Include our JAR -->
		  			<zipfileset dir="${dist.dir}" prefix="dist" includes="${jar.name}.jar"/>
		  			<!-- Include src folder and source files -->
		  			<zipfileset dir="src" prefix="src"/>
		  			<!-- Include build.xml file -->
		  			<zipfileset dir="." includes="build.xml"/>
		  			<!-- Include CHANGELOG and README files -->
		  			<zipfileset dir="." includes="Changelog"/>
		  			<zipfileset dir="." includes="README"/>
		  			<!-- Include Javadoc -->
		  			<zipfileset dir="${doc.dir}" prefix="docs"/>
		  		</zip> 	
		    	<echo message="Generation of the zipped file finished!"/>
    </target>
	
	<!-- Used to propagate changes to other projects using this library -->
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    
		
</project>
